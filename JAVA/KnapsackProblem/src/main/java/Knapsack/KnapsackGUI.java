package Knapsack;
import javax.swing.*;
import javax.swing.border.TitledBorder;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class KnapsackGUI {

    public static void main(String[] args) {
        JFrame frame = new JFrame("Knapsack Problem");
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setSize(400, 400);
        frame.setLayout(new BorderLayout()); // Change layout to BorderLayout

        JPanel panel = new JPanel();
        panel.setLayout(new GridLayout(0, 2));
        panel.setBorder(new TitledBorder("Enter the values"));

        JLabel numberOfItemTypesLabel = new JLabel("Enter the number of item types:");
        JTextField numberOfItemTypesField = new JTextField();
        numberOfItemTypesField.setPreferredSize(new Dimension(Integer.MAX_VALUE, 10)); // Set preferred height to 20

        JLabel seedLabel = new JLabel("Enter the seed:");
        JTextField seedField = new JTextField();
        numberOfItemTypesField.setPreferredSize(new Dimension(Integer.MAX_VALUE, 20)); // Set preferred height to 20


        JLabel lowerBoundLabel = new JLabel("Enter the lower bound:");
        JTextField lowerBoundField = new JTextField();
        lowerBoundField.setPreferredSize(new Dimension(Integer.MAX_VALUE, 20)); // Set preferred height to 20

        JLabel upperBoundLabel = new JLabel("Enter the upper bound:");
        JTextField upperBoundField = new JTextField();
        upperBoundField.setPreferredSize(new Dimension(Integer.MAX_VALUE, 20)); // Set preferred height to 20

        JLabel capacityLabel = new JLabel("Enter the capacity of the knapsack:");
        JTextField capacityField = new JTextField();
        capacityField.setPreferredSize(new Dimension(Integer.MAX_VALUE, 20)); // Set preferred height to 20

        panel.add(numberOfItemTypesLabel);
        panel.add(numberOfItemTypesField);
        panel.add(seedLabel);
        panel.add(seedField);
        panel.add(lowerBoundLabel);
        panel.add(lowerBoundField);
        panel.add(upperBoundLabel);
        panel.add(upperBoundField);
        panel.add(capacityLabel);
        panel.add(capacityField);

        JTextArea generatedItemsArea = new JTextArea();
        generatedItemsArea.setEditable(false); // Make the JTextArea not editable
        JScrollPane generatedItemsScroll = new JScrollPane(generatedItemsArea);
        generatedItemsScroll.setBorder(new TitledBorder("Generated Items"));

        JTextArea knapsackItemsArea = new JTextArea();
        knapsackItemsArea.setEditable(false); // Make the JTextArea not editable
        JScrollPane knapsackItemsScroll = new JScrollPane(knapsackItemsArea);
        knapsackItemsScroll.setBorder(new TitledBorder("Items in Knapsack"));

        JPanel buttonPanel = new JPanel(new FlowLayout()); // Create a new panel with FlowLayout for the button
        JButton solveButton = new JButton("Solve");
        solveButton.setPreferredSize(new Dimension(80, 30)); // Set the preferred size of the button
        solveButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                try {
                    int numberOfItemTypes = Integer.parseInt(numberOfItemTypesField.getText());
                    int seed = Integer.parseInt(seedField.getText());
                    int lowerBound = Integer.parseInt(lowerBoundField.getText());
                    int upperBound = Integer.parseInt(upperBoundField.getText());
                    int capacity = Integer.parseInt(capacityField.getText());

                    Problem problem = new Problem(numberOfItemTypes, seed, lowerBound, upperBound);
                    Result result = problem.solve(capacity);

                    // Populate the JTextAreas with the appropriate data
                    generatedItemsArea.setText(problem.toString());
                    knapsackItemsArea.setText(result.toString());
                } catch (NumberFormatException ex) {
                    // Show a popup error message if the input is not a number
                    JOptionPane.showMessageDialog(frame, "Please enter a valid number in all fields.", "Input Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        });
        buttonPanel.add(solveButton); // Add the button to the new panel

        panel.add(generatedItemsScroll);
        panel.add(knapsackItemsScroll);

        frame.add(panel, BorderLayout.CENTER); // Add the panel to the center of the frame
        frame.add(buttonPanel, BorderLayout.SOUTH); // Add the button panel to the south of the frame

        frame.setVisible(true);
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
    }
}